2014-05-27 
-> Got the green light on the project, need to develop a timeline of sorts
-> Tim Diep was added to the project group and added to the google form and repo 
-> began to create the timeline, will add to the repo
-> Nazifa added Interface Pile,along with basic methods and Solitaire, the driver 
-> Nazifa added Ranks and edited certain methods 
-> Tim added Deck: the main pile from where the player takes the cards from
-> Tim added Suits: the four piles that will be sorted
-> Sydney added Card class: will be the class that is used to make the array lists, stacks etc..

2014-05-28
-> Sydney modified card class to account for the face cards and better fit the deck and suits classes
-> added a timeline file 
-> Tim added a constructor and update method to Solitaire.java
-> Tim added a main method to Deck for testing
-> Sydney added a main method to Card for testing 

2014-05-29
-> Nazifa added methods to the Card class and altered the Ranks class
-> Tim and Sydney renamed the files so that each pile has a more informative name
-> Sydney included more details to the timeline
-> Tim tested DrawPile.java, shuffling is incomplete though
-> Nazifa renamed Ranks to NumSort and tested the class (NumSort is complete) 

2014-05-30

2014-05-31
->Sydney worked on the setup and altered the class names to match the new classes in SolitaireRunner

2014-06-01
-> Tim worked on the update() and constructor methods in SolitaireRunner, adding the basic framework for the visuals

2014-06-02
-> During lab we ran the SolitaireRunner and tackled the errors in it
	 - deleted isEmpty() from pile interface
	 - fixed the SuitSort contructors so they were correctly being applied
	 - trying to print the board, success!
	 - added suit indicators above the sorted suit piles
2014-06-03
-> During Lab we:
	- worked on the initial setup of the board
		- dealt cards to NumSort 
	- tried to put numSort into the arrayList 
	- altered the toString, checking isFlipped// changed _flipped to _faceup and isFlipped to isFaceUp
	- accounted for face up or face down when being dealt out 
	0 added getsize to NumSort 
	- YAY kind of got deal to work, one row DOWN! :) 
-> Tim tweaked the merge() method to properly show each NumSort pile in the board

2014-06-04
-> During lab we:
   	- got rid of the "nulls" being shown by the board when there were no cards there
	- created a checkComplete() method to see if the game is over
	- started the turn() method
